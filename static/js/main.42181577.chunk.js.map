{"version":3,"sources":["img/poison.png","img/armor.png","img/warrior.png","img/landmark.jpg","img/lightning.jpg","img/sword.jpg","img/dragon.jpg","img/gun.png","img/raygun.jpg","img/flamethrower.png","img/potion.png","img/bomb.png","img/zombie.png","img/robot.png","img/shark.png","img/ghost.png","img/bam.jpg","serviceWorker.js","components/StoreItem.jsx","components/Store.jsx","components/InventoryItem.jsx","components/You.jsx","components/GameName.jsx","components/GameOver.jsx","components/Foe.jsx","components/Header.jsx","components/BonusItem.jsx","components/Bonus.jsx","components/Game.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","StoreItem","props","zeroButton","item","count","onClick","onZero","className","src","picture","height","width","alt","name","title","text","cost","onIncrement","onDecrement","Store","this","items","currentFoe","funds","onReset","onPlay","userName","onNameChange","storeButtons","Fragment","instructions","id","maxLength","onChange","value","type","map","key","Component","InventoryItem","itemId","onTurn","You","yourHealth","buttons","i","push","warrior","fieldStyle","backgroundImage","landmark","backgroundRepeat","backgroundSize","GameName","handleGiveUp","confirm","onGiveUp","style","GameOver","onPlayAgain","Foe","foe","foeId","health","maxHealth","React","Header","record","Wins","Losses","BonusItem","bonus","bonusItemId","onBonusChoice","cashValue","Math","floor","random","itemValue","itemName","Bonus","backToStore","$","show","onBonusEnd","continuePlaying","renderFoe","bonusItems","Game","componentDidUpdate","prevProps","prevState","itemCount","state","handleLoss","handleNameChange","e","setState","target","handleIncrement","handleDecrement","resetStore","handleZero","handleLevelButtons","level","removeClass","addClass","handleWin","html","setTimeout","fadeOut","method","animate","updateRecord","handleBonusChoice","amount","hide","document","getElementById","pointerEvents","handleBonus","handleBonusEnd","handleAttack","foes","useItem","poisonDamageToFoe","status","attackDamageToFoe","damage","totalDamageToFoe","attackDamageToYou","attack","totalDamageToYou","Armor","images","bam","theirHealth","poison","handleKill","handlePotion","handleArmorDeduction","ArmorTurns","newFoe","ReactDOM","render","length","foeNumber","handleTurn","currentFoeId","index","indexOf","armor","playGame","itemsBought","playAgain","initialState","result","sword","bomb","lightning","gun","raygun","flamethrower","potion","zombie","robot","ghost","shark","dragon"],"mappings":"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","file":"static/js/main.42181577.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poison.76669a5b.png\";","module.exports = __webpack_public_path__ + \"static/media/armor.ea39ee31.png\";","module.exports = __webpack_public_path__ + \"static/media/warrior.53ad4d96.png\";","module.exports = __webpack_public_path__ + \"static/media/landmark.e230de63.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lightning.4574b811.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sword.ff2b056e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dragon.9d324895.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gun.99fd83c8.png\";","module.exports = __webpack_public_path__ + \"static/media/raygun.f141faac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flamethrower.e9e94c6a.png\";","module.exports = __webpack_public_path__ + \"static/media/potion.7af31335.png\";","module.exports = __webpack_public_path__ + \"static/media/bomb.0d1f89a9.png\";","module.exports = __webpack_public_path__ + \"static/media/zombie.24a759cb.png\";","module.exports = __webpack_public_path__ + \"static/media/robot.105446cc.png\";","module.exports = __webpack_public_path__ + \"static/media/shark.f1db75e1.png\";","module.exports = __webpack_public_path__ + \"static/media/ghost.80afcc43.png\";","module.exports = __webpack_public_path__ + \"static/media/bam.b043a763.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const StoreItem = (props) => {\n  const { item } = props;\n  let zeroButton;\n  if (item.count > 0) {\n    zeroButton = (\n      <button onClick={() => props.onZero(item)} className=\"btn zero btn-danger btn-sm auto block\">\n        Zero\n      </button>\n    );\n  }\n  return (\n    <div className=\"item storeItem\">\n      <img src={item.picture} className=\"image\" height=\"40px\" width=\"40px\" alt={item.name} />\n      <span className=\"question\" title={item.text}>\n        ?\n      </span>\n      <span className=\"block\">${item.cost}</span>\n      <span className=\"block count auto\">{item.count}</span>\n      <button onClick={() => props.onIncrement(item)} className=\"btn plus btn-secondary btn-sm m-1\">\n        +\n      </button>\n      <button onClick={() => props.onDecrement(item)} className=\"btn minus btn-primary btn-sm m-1\">\n        -\n      </button>\n      {zeroButton}\n    </div>\n  );\n};\n\nStoreItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StoreItem } from \"./StoreItem.jsx\";\n\nexport class Store extends Component {\n  render() {\n    const { items, currentFoe, funds, onIncrement, onDecrement, onZero, onReset, onPlay, userName, onNameChange } = this.props;\n    let storeButtons = (\n      <React.Fragment>\n        <button onClick={onPlay} className=\"playButton btn m-2\">\n          {currentFoe === 0 ? \"Play game!\" : \"Back to game!\"}\n        </button>\n        {currentFoe === 0 ? (\n          <button onClick={onReset} className=\"btn btn-danger m-2\">\n            Reset purchases\n          </button>\n        ) : (\n          \"\"\n        )}\n      </React.Fragment>\n    );\n    let instructions = (\n      <p className=\"instructions\">\n        Make some purchases! <br /> Stock up on supplies for the game!\n      </p>\n    );\n    return (\n      <div id=\"store\">\n        <div className=\"nameFighter\">\n          Name your fighter: <input maxLength=\"12\" onChange={onNameChange} value={userName} type=\"text\" />\n        </div>\n        <h1 className=\"storeLabel\">Store</h1>\n        {funds === 100 ? instructions : storeButtons}\n        <br />\n\n        <div className=\"itemList\">\n          {items.map((item) => (\n            <StoreItem key={item.id} onIncrement={onIncrement} onDecrement={onDecrement} onZero={onZero} item={item} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nStore.propTypes = {\n  items: PropTypes.array.isRequired,\n  total: PropTypes.number.isRequired,\n  onIncrement: PropTypes.func.isRequired,\n  onDecrement: PropTypes.func.isRequired,\n  onZero: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  onPlay: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const InventoryItem = (props) => {\n  const { item } = props;\n  let itemId = `item${item.id}`;\n  return (\n    <div onClick={() => props.onTurn(item)} className=\"item inventoryItem\" title={item.text}>\n      <img id={itemId} src={item.picture} className=\"image\" height=\"40px\" width=\"40px\" alt={item.name} />\n      <span className=\"invCount auto\">{item.count}</span>\n      {/*<button className=\"btn btn-primary btn-sm m-3\">Use</button>\n       <span className=\"question\">\n        ?\n      </span> */}\n    </div>\n  );\n};\n\nInventoryItem.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warrior from \"../img/warrior.png\";\n\nexport const You = (props) => {\n  const { userName, yourHealth } = props,\n    buttons = [];\n  for (let i = 1; i <= 5; i++) {\n    buttons.push(\n      <button id=\"btn1\" className={\"btn-sm m-1 \" + (i === 1 ? \"btn-primary\" : \"btn btn-secondary\")}>\n        Level {i}\n      </button>\n    );\n  }\n  return (\n    <div className=\"you\">\n      <div className=\"yourInfo\">\n        {userName}\n        <br />\n        <div id=\"yourStatus\"></div>\n        <span>{yourHealth}/100</span>\n        <div className=\"yourHealth\">\n          <div className=\"yourHealthBar\"></div>\n        </div>\n      </div>\n      <img src={warrior} className=\"youImage\" alt=\"warrior\" />\n    </div>\n  );\n};\n\nYou.propTypes = {\n  userName: PropTypes.string,\n  yourHealth: PropTypes.number.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { InventoryItem } from \"./InventoryItem.jsx\";\nimport { You } from \"./You.jsx\";\nimport landmark from \"../img/landmark.jpg\";\n\nconst fieldStyle = {\n  backgroundImage: `url(${landmark})`,\n  backgroundRepeat: \"no-repeat\",\n  backgroundSize: \"cover\",\n};\nexport class GameName extends Component {\n  handleGiveUp = () => {\n    if (window.confirm(\"Are you sure you want to give up?\")) {\n      this.props.onGiveUp(\"giveUp\");\n    }\n  };\n  render() {\n    const { items, onTurn, yourHealth, userName } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"gameName\">Dragon Slayer</h1>\n        <button onClick={this.handleGiveUp} className=\"btn btn-danger btn-sm giveUp\">\n          Give up\n        </button>\n        <div className=\"inventoryAndField\">\n          <div className=\"inventory\">\n            <h1>Inventory</h1>\n            {items.map((item) => {\n              return item.count > 0 ? <InventoryItem key={item.id} onTurn={onTurn} item={item} /> : null;\n            })}\n          </div>\n          <div className=\"playingField\" style={fieldStyle}>\n            <div id=\"foe\"></div>\n            <div id=\"yourItem\"></div>\n            <div id=\"theirItem\"></div>\n            <You yourHealth={yourHealth} userName={userName} />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nGameName.propTypes = {\n  item: PropTypes.object.isRequired,\n  foes: PropTypes.array.isRequired,\n  onTurn: PropTypes.func.isRequired,\n  onGiveUp: PropTypes.func.isRequired,\n  yourHealth: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const GameOver = (props) => {\n  const { onPlayAgain } = props;\n  return (\n    <div className=\"gameOver\">\n      <span id=\"gameOverText\"></span>\n      <br />\n      <br />\n      <button onClick={onPlayAgain} className=\"btn btn-primary btn-sm m-1\">\n        Play Again\n      </button>\n    </div>\n  );\n};\n\nGameOver.propTypes = {\n  onPlayAgain: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class Foe extends React.Component {\n  render() {\n    const { foe } = this.props;\n    const foeId = `foe${foe.id}`;\n    //const statusId = `theirStatus${foe.id}`;\n    return (\n      <div id={foeId} className=\"foe\">\n        <img src={foe.picture} className=\"foeImage\" alt={foe.name} />\n        <div className=\"theirInfo\">\n          {foe.name}\n          <br />\n          <span>\n            {foe.health}/{foe.maxHealth}\n          </span>\n          <div className=\"theirHealth\">\n            <div className=\"theirHealthBar\"></div>\n          </div>\n          <div className=\"theirStatus\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFoe.propTypes = {\n  foe: PropTypes.object.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Header = (props) => {\n  const { userName, record, funds } = props,\n    buttons = [];\n  for (let i = 1; i <= 5; i++) {\n    buttons.push(\n      <button id={\"btn\" + i} className={\"btn-sm m-1 btn btn-secondary\"}>\n        Level {i}\n      </button>\n    );\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"record\">\n        Name: {userName}\n        <br />\n        Wins: {record.Wins}\n        <br />\n        Losses: {record.Losses}\n      </div>\n      <span className=\"funds\">Funds: ${funds}</span>\n      <div className=\"levels\">{buttons}</div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  userName: PropTypes.string.isRequired,\n  record: PropTypes.object.isRequired,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport class BonusItem extends Component {\n  shouldComponentUpdate() {\n    return false;\n  }\n  render() {\n    const { bonusItemId, items, onBonusChoice } = this.props;\n    const cashValue = Math.floor(Math.random() * 10) + 5; //cash value between 5-15\n    let bonus;\n    if (Math.random() < 0.5) {\n      bonus = (\n        <div id={`bonusItem${bonusItemId}`} className=\"bonusItem\" onClick={() => onBonusChoice(\"cash\", cashValue, bonusItemId)}>\n          <div className=\"shownValue\">???</div>\n          <div className=\"hiddenValue\">${cashValue}</div>\n        </div>\n      );\n    } else {\n      const itemId = Math.floor(Math.random() * 9),\n        item = items[itemId],\n        itemValue = Math.floor(cashValue / item.cost) > 0 ? Math.floor(cashValue / item.cost) : 1,\n        itemName = item.name;\n      bonus = (\n        <div id={`bonusItem${bonusItemId}`} className=\"bonusItem\" onClick={() => onBonusChoice(\"item\", itemValue, bonusItemId, itemName)}>\n          <div className=\"shownValue\">???</div>\n          <div className=\"hiddenValue\">\n            {itemValue}x <img id={itemId} src={item.picture} className=\"image\" height=\"40px\" width=\"40px\" alt={item.name} />\n          </div>\n        </div>\n      );\n    }\n    return bonus;\n  }\n}\n\nBonusItem.propTypes = {};\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport { BonusItem } from \"./BonusItem.jsx\";\nimport $ from \"jquery\";\n\nexport class Bonus extends Component {\n  backToStore = () => {\n    $(\"#store\").show();\n    this.props.onBonusEnd();\n  };\n  continuePlaying = () => {\n    $(\"#game\").show();\n    this.props.renderFoe(2, 100, true);\n    this.props.onBonusEnd();\n  };\n  render() {\n    const { items, onBonusChoice, bonusItems } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"gameName\">Bonus Round</h1>\n        <br />\n        <div className=\"bonusItems\">\n          {bonusItems.map((item) => {\n            return <BonusItem key={item} bonusItemId={item} items={items} onBonusChoice={onBonusChoice} />;\n          })}\n        </div>\n        <button className=\"btn btn-danger m-2\" onClick={this.backToStore}>\n          Back to Store\n        </button>\n        <button className=\"btn btn-success m-2\" onClick={this.continuePlaying}>\n          Continue Playing\n        </button>\n      </React.Fragment>\n    );\n  }\n}\n\nBonus.propTypes = {\n  onBonusChoice: PropTypes.func.isRequired,\n  items: PropTypes.array.isRequired,\n};\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Store } from \"./Store.jsx\";\nimport { GameName } from \"./GameName.jsx\";\nimport { GameOver } from \"./GameOver.jsx\";\nimport { Foe } from \"./Foe.jsx\";\nimport { Header } from \"./Header.jsx\";\nimport { Bonus } from \"./Bonus.jsx\";\nimport lightning from \"../img/lightning.jpg\";\nimport sword from \"../img/sword.jpg\";\nimport dragon from \"../img/dragon.jpg\";\nimport gun from \"../img/gun.png\";\nimport raygun from \"../img/raygun.jpg\";\nimport poison from \"../img/poison.png\";\nimport flamethrower from \"../img/flamethrower.png\";\nimport armor from \"../img/armor.png\";\nimport potion from \"../img/potion.png\";\nimport bomb from \"../img/bomb.png\";\nimport zombie from \"../img/zombie.png\";\nimport robot from \"../img/robot.png\";\nimport shark from \"../img/shark.png\";\nimport ghost from \"../img/ghost.png\";\nimport bam from \"../img/bam.jpg\";\nimport $ from \"jquery\";\n\nexport class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.images = { poison, bam, armor };\n    this.state = { ...this.initialState, record: { Wins: 0, Losses: 0 }, userName: \"Warrior\" };\n  }\n  get initialState() {\n    return {\n      funds: 100,\n      itemCount: 0,\n      yourHealth: 100,\n      currentFoe: 0,\n      Armor: \"No\",\n      ArmorTurns: 0,\n      Bonus: false,\n      items: [\n        {\n          id: 0,\n          name: \"Sword\",\n          picture: sword,\n          count: 0,\n          cost: 2,\n          text: \"The sword can be used to stab opponents.\",\n          damage: [2, 1, 1, 2, 8],\n        },\n        {\n          id: 1,\n          name: \"Bomb\",\n          picture: bomb,\n          count: 0,\n          cost: 8,\n          text: \"The bomb can blow things up.\",\n          damage: [7, 6, 4, 2, 8],\n        },\n        {\n          id: 2,\n          name: \"Lightning\",\n          picture: lightning,\n          count: 0,\n          cost: 10,\n          text: \"A streak of lightning can be more effective on frailer foes\",\n          damage: [9, 9, 5, 12, 5],\n        },\n        {\n          id: 3,\n          name: \"Gun\",\n          picture: gun,\n          count: 0,\n          cost: 3,\n          text: \"It's a gun. What would you expect to do with it?\",\n          damage: [4, 2, 2, 5, 2],\n        },\n        {\n          id: 4,\n          name: \"Ray gun\",\n          picture: raygun,\n          count: 0,\n          cost: 4,\n          text: \"A gun that shoots radioactive fluid\",\n          damage: [5, 4, 3, 4, 4],\n        },\n        {\n          id: 5,\n          name: \"Flamethrower\",\n          picture: flamethrower,\n          count: 0,\n          cost: 10,\n          text: \"A flamethrower\",\n          damage: [11, 13, 6, 2, 4],\n        },\n        {\n          id: 6,\n          name: \"Poison\",\n          picture: poison,\n          count: 0,\n          cost: 3,\n          text: \"Slowly inflicts damage over time\",\n          damage: [1, 0, 1, 3, 1],\n        },\n        { id: 7, name: \"Potion\", picture: potion, count: 0, cost: 10, text: \"Can be used to regain 20 health\" },\n        {\n          id: 8,\n          name: \"Armor\",\n          picture: armor,\n          count: 0,\n          cost: 7,\n          text: \"Weakens damage taken by 20% for 10 turns\",\n        },\n      ],\n      foes: [\n        { id: 0, name: \"Zombie\", status: \"healthy\", picture: zombie, health: 15, maxHealth: 15, attack: 8 },\n        { id: 1, name: \"Robot\", status: \"healthy\", picture: robot, health: 31, maxHealth: 31, attack: 5 },\n        { id: 2, name: \"Ghost\", status: \"healthy\", picture: ghost, health: 10, maxHealth: 10, attack: 8 },\n        { id: 3, name: \"Shark\", status: \"healthy\", picture: shark, health: 40, maxHealth: 40, attack: 7 },\n        { id: 4, name: \"Dragon\", status: \"healthy\", picture: dragon, health: 25, maxHealth: 25, attack: 12 },\n      ],\n    };\n  }\n  componentDidUpdate = (prevProps, prevState) => {\n    if (prevState.itemCount !== 0 && this.state.itemCount === 0 && this.state.funds !== 100) {\n      this.handleLoss(\"outOfItems\");\n    }\n  };\n  handleNameChange = (e) => {\n    this.setState({ userName: e.target.value });\n  };\n  handleIncrement = (item) => {\n    if (this.state.funds - item.cost >= 0) {\n      const items = [...this.state.items];\n      items[item.id].count++;\n      this.setState((prevState) => {\n        return {\n          funds: prevState.funds - item.cost,\n          items,\n        };\n      });\n    }\n  };\n  handleDecrement = (item) => {\n    if (item.count > 0) {\n      const items = [...this.state.items];\n      items[item.id].count--;\n      this.setState((prevState) => {\n        return {\n          funds: prevState.funds + item.cost,\n          items,\n        };\n      });\n    }\n  };\n  resetStore = () => {\n    const items = this.state.items.map((item) => {\n      item.count = 0;\n      return item;\n    });\n    this.setState({\n      funds: 100,\n      items,\n    });\n  };\n  handleZero = (item) => {\n    const items = [...this.state.items];\n    const count = [...item.count];\n    items[item.id].count = 0;\n    this.setState((prevState) => {\n      return {\n        funds: prevState.funds + item.cost * count,\n        items,\n      };\n    });\n  };\n  handleLevelButtons = (level) => {\n    switch (level) {\n      case 0:\n        $(\"#btn1\").removeClass(\"btn-secondary\");\n        $(\"#btn1\").addClass(\"btn-primary\");\n        break;\n      case 1:\n        $(\"#btn2\").addClass(\"btn-danger\");\n        break;\n      case 2:\n        $(\"#btn3\").addClass(\"btn-warning\");\n        break;\n      case 3:\n        $(\"#btn4\").addClass(\"btn-info\");\n        break;\n      case 4:\n        $(\"#btn5\").addClass(\"btn-success\");\n        break;\n      case \"reset\":\n        $(\"#btn1\").addClass(\"btn-secondary\");\n        $(\"#btn1\").removeClass(\"btn-primary\");\n        $(\"#btn2\").removeClass(\"btn-danger\");\n        $(\"#btn3\").removeClass(\"btn-warning\");\n        $(\"#btn4\").removeClass(\"btn-info\");\n        $(\"#btn5\").removeClass(\"btn-success\");\n        break;\n      default:\n        break;\n    }\n  };\n  handleWin = () => {\n    $(\"#gameOverText\").html(\"You won. Congratulations!!\");\n    setTimeout(() => {\n      $(\"#game\").fadeOut(3000, () => {\n        $(\".gameOver\").show();\n      });\n    }, 500);\n    const record = { ...this.state.record };\n    record.Wins++;\n    this.setState({ record });\n  };\n  handleLoss = (method) => {\n    switch (method) {\n      case \"outOfItems\":\n        $(\"#gameOverText\").html(\"Game over. You ran out of items.\");\n        break;\n      case \"giveUp\":\n        $(\"#gameOverText\").html(\"You have given up and brought shame to your nobel family.\");\n        break;\n      case \"health\":\n        $(\"#gameOverText\").html(\"Game over. You died.\");\n        $(\".yourHealthBar\").animate({ width: \"0%\" }, 500, \"linear\");\n        break;\n      default:\n        break;\n    }\n    setTimeout(() => {\n      $(\"#game\").fadeOut(2000, () => {\n        $(\".gameOver\").show();\n      });\n    }, 500);\n    this.updateRecord(\"Loss\");\n  };\n  handleBonusChoice = (type, amount, bonusItemId, itemName) => {\n    $(\".shownValue\").hide();\n    $(\".hiddenValue\").show();\n    $(`#bonusItem${bonusItemId}`).addClass(\"chosen\");\n    for (let i = 1; i <= 4; i++) {\n      document.getElementById(`bonusItem${i}`).style.pointerEvents = \"none\";\n    }\n    switch (type) {\n      case \"cash\":\n        this.setState((prevState) => {\n          return {\n            funds: prevState.funds + amount,\n          };\n        });\n        break;\n      case \"item\":\n        const items = this.state.items.map((item) => {\n          if (item.name === itemName) {\n            item.count += amount;\n          }\n          return item;\n        });\n        this.setState((prevState) => {\n          return {\n            itemCount: prevState.itemCount + amount,\n            items,\n          };\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  handleBonus = () => {\n    this.setState({ Bonus: true });\n    $(\"#game\").hide();\n  };\n  handleBonusEnd = () => {\n    this.setState({ Bonus: false });\n  };\n  updateRecord(result) {\n    let record = { ...this.state.record };\n    if (result === \"Win\") {\n      record.Wins++;\n    } else if (result === \"Loss\") {\n      record.Losses++;\n    }\n    this.setState({ record });\n  }\n  handleAttack = (foes, currentFoe, useItem) => {\n    const poisonDamageToFoe = currentFoe.status === \"Poisoned\" ? 2 : 0,\n      attackDamageToFoe =\n        useItem.name === \"Poison\" ? useItem.damage[currentFoe.id] : Math.floor(Math.random() * 3) - 1 + useItem.damage[currentFoe.id], //Damage +/- 1, don't +/- 1 if poison\n      totalDamageToFoe = poisonDamageToFoe + attackDamageToFoe;\n    const attackDamageToYou = currentFoe.attack + Math.floor(Math.random() * 5) - 2,\n      totalDamageToYou = this.state.Armor === \"Yes\" ? Math.floor(attackDamageToYou * 0.8) : attackDamageToYou,\n      yourHealth = this.state.yourHealth - totalDamageToYou;\n    if (yourHealth <= 0) {\n      this.handleLoss(\"health\");\n      return;\n    }\n    $(\"#theirItem\").html(`<img src=${this.images.bam} class=\"itemImage\" /> ${totalDamageToYou} Damage!`);\n    $(\"#theirItem\").show();\n    if (currentFoe.health - totalDamageToFoe > 0) {\n      //Foe still alive\n      foes[currentFoe.id].health = currentFoe.health - totalDamageToFoe;\n      const theirHealth = currentFoe.health * (100 / currentFoe.maxHealth);\n      if (currentFoe.status === \"Poisoned\") {\n        $(\"#yourItem\").html(\n          `<img src=${useItem.picture} class=\"itemImage\" /> ${attackDamageToFoe} Damage! <img src=${this.images.poison} class=\"itemImage\" /> ${poisonDamageToFoe} Damage!`\n        );\n      } else {\n        $(\"#yourItem\").html(`<img src=${useItem.picture} class=\"itemImage\" /> ${totalDamageToFoe} Damage!`);\n      }\n      $(\"#yourItem\").show();\n      $(\".yourHealthBar\").animate({ width: `${yourHealth}%` }, 200);\n      this.renderFoe(currentFoe.id, theirHealth);\n    } else {\n      //handle kill\n      $(\"#yourItem\").html(`<img src=${useItem.picture} class=\"itemImage\" /> ${currentFoe.health} Damage!`);\n      foes[currentFoe.id].health = 0;\n      this.handleKill(currentFoe);\n    }\n    this.setState({ yourHealth });\n  };\n  handlePotion = () => {\n    const yourHealth = this.state.yourHealth <= 80 ? this.state.yourHealth + 20 : 100;\n    $(\".yourHealthBar\").animate({ width: `${yourHealth}%` }, 500);\n    this.setState({ yourHealth });\n  };\n  handleArmorDeduction = () => {\n    if (this.state.ArmorTurns > 1) {\n      this.setState((prevState) => {\n        return { ArmorTurns: prevState.ArmorTurns - 1 };\n      });\n    } else if (this.state.ArmorTurns === 1) {\n      this.setState({ ArmorTurns: 0, Armor: \"No\" });\n      $(\"#yourStatus\").html(\"\");\n    }\n  };\n  renderFoe = (id, theirHealth, newFoe) => {\n    ReactDOM.render(<Foe key={id} foe={this.state.foes[id]} />, document.getElementById(\"foe\"), () => {\n      $(\".theirHealthBar\").animate({ width: `${theirHealth}%` }, 200);\n      if (newFoe) {\n        this.handleLevelButtons(id);\n        $(`#foe${id}`).show();\n      }\n    });\n  };\n  handleKill = (currentFoe) => {\n    $(\".theirHealthBar\").animate({ width: \"1%\" }, 500, \"linear\", () => {\n      $(`#foe${currentFoe.id}`).fadeOut(3000);\n      if (currentFoe.id === this.state.foes.length - 1) {\n        this.handleWin();\n      } else {\n        const foeNumber = currentFoe.id + 1;\n        this.setState({ currentFoe: foeNumber });\n        if (foeNumber === 2) {\n          this.handleBonus();\n        } else {\n          this.renderFoe(foeNumber, 100, true);\n        }\n      }\n    });\n    $(\"#yourItem\").hide();\n    $(\"#theirItem\").hide();\n  };\n  handleTurn = (useItem) => {\n    let items,\n      currentFoeId = this.state.currentFoe;\n    items = [...this.state.items];\n    const index = items.indexOf(useItem);\n    items[index].count--;\n    let foes = [...this.state.foes];\n    const currentFoe = foes[currentFoeId];\n\n    if (useItem.name === \"Armor\") {\n      $(\"#yourStatus\").html(`<img src=${this.images.armor} height='40px' width='40px' />`);\n      this.setState({ Armor: \"Yes\", ArmorTurns: 10 });\n    } else if (useItem.name === \"Potion\") {\n      this.handlePotion();\n    } else {\n      this.handleAttack(foes, currentFoe, useItem);\n    }\n    if (useItem.name === \"Poison\" && currentFoe.name !== \"Robot\") {\n      currentFoe.status = \"Poisoned\";\n      $(\".theirStatus\").html(`<img src=${this.images.poison} height='40px' width='40px' />`);\n      $(\".theirStatus\").show();\n    }\n    this.setState((prevState) => {\n      return {\n        itemCount: prevState.itemCount - 1,\n        items,\n        foes,\n      };\n    });\n    if (this.state.ArmorTurns >= 1) {\n      this.handleArmorDeduction();\n    }\n  };\n  playGame = () => {\n    $(\"#store\").hide();\n    $(\"#game\").show();\n    this.renderFoe(this.state.currentFoe, 100, true);\n    let itemsBought = 0;\n    for (let i = 0; i < this.state.items.length; i++) {\n      itemsBought += this.state.items[i].count;\n    }\n    this.setState({ itemCount: itemsBought });\n    $(\"#yourItem\").hide();\n    $(\"#theirItem\").hide();\n  };\n  playAgain = () => {\n    this.setState(this.initialState);\n    this.handleLevelButtons(\"reset\");\n    $(\".theirHealthBar\").width(\"100%\");\n    $(\".yourHealthBar\").width(\"100%\");\n    $(\"#store\").show();\n    $(\"#game\").hide();\n    $(\".gameOver\").hide();\n    $(\"#yourStatus\").html(\"\");\n    $(\".theirStatus\").html(\"\");\n    $(\".theirStatus\").hide();\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Header userName={this.state.userName} record={this.state.record} funds={this.state.funds} />\n        <Store\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onReset={this.resetStore}\n          onPlay={this.playGame}\n          onZero={this.handleZero}\n          funds={this.state.funds}\n          items={this.state.items}\n          currentFoe={this.state.currentFoe}\n          onNameChange={this.handleNameChange}\n        />\n        <div id=\"game\">\n          <GameName\n            yourHealth={this.state.yourHealth}\n            foes={this.state.foes}\n            items={this.state.items}\n            onGiveUp={this.handleLoss}\n            onTurn={this.handleTurn}\n            userName={this.state.userName}\n          />\n        </div>\n        <div id=\"bonus\">\n          {this.state.Bonus ? (\n            <Bonus\n              onBonusChoice={this.handleBonusChoice}\n              onBonusEnd={this.handleBonusEnd}\n              bonusItems={[1, 2, 3, 4]}\n              items={this.state.items}\n              renderFoe={this.renderFoe}\n            />\n          ) : null}\n        </div>\n        <GameOver onPlayAgain={this.playAgain} />\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Game } from \"./components/Game.jsx\";\nimport \"../node_modules/font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}